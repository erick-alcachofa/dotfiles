function append_path() {
    case ":$PATH:" in
        *:"$1":*)
            ;;
        *)
            PATH="${PATH:+$PATH:}$1"
    esac
}

if [ -d "$HOME/.local/bin" ] ; then
    append_path "$HOME/.local/bin"
    export PATH
fi

unset append_path

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

if [ ! -d "$ZINIT_HOME" ]; then
    mkdir -p "$(dirname $ZINIT_HOME)"
    git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"

# zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light Aloxaf/fzf-tab

zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::systemd
zinit snippet OMZP::archlinux
zinit snippet OMZP::command-not-found

bindkey -e

# Start typing + [Up-Arrow] - fuzzy find history forward
autoload -U up-line-or-beginning-search
zle -N up-line-or-beginning-search

bindkey "^[[A" up-line-or-beginning-search
if [[ -n "${terminfo[kcuu1]}" ]]; then
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi

# Start typing + [Down-Arrow] - fuzzy find history backward
autoload -U down-line-or-beginning-search
zle -N down-line-or-beginning-search

bindkey "^[[B" down-line-or-beginning-search
if [[ -n "${terminfo[kcud1]}" ]]; then
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# [Alt-RightArrow] - move forward one word
bindkey -M emacs '^[[1;3C' forward-word

# [Alt-LeftArrow] - move backward one word
bindkey -M emacs '^[[1;3D' backward-word

bindkey -M emacs '^[l' forward-word

# [Alt-LeftArrow] - move backward one word
bindkey -M emacs '^[h' backward-word

HISTSIZE=99999
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase

setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

test -r ~/.dircolors && eval $(dircolors ~/.dircolors)

zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd --color=always --icon=always $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'lsd --color=always --icon=always $realpath'
zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup

export FZF_ALT_C_COMMAND=''
export FZF_CTRL_T_COMMAND=''
export FZF_DEFAULT_COMMAND='rg --files --fixed-strings --hidden --follow --glob "!.git/*"'

function files() {
    thunar $@ &>/dev/null & disown
}

function onbg() {
    $@ &>/dev/null & disown
}

function openbg() {
    xdg-open $@ &>/dev/null & disown
}

function open() {
    devour xdg-open $@
}

function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		\builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

alias ..='cd ..'
alias ...='cd ../..'

alias z='cd'

alias ls='lsd'
alias l='lsd -Al'
alias tree='lsd --tree'
alias cat='bat -p -P'
alias clip='xclip -sel clip'

alias mv='mv -i'
alias rm='rm -I'

alias smux='tmuxinator start'
alias mux='tmuxinator'

alias dot="dot -Gmargin=0.2 -Gbgcolor=#00000000 -Gcolor=#e0def4ff -Gfontcolor=#e0def4ff -Ncolor=#e0def4ff -Nfontcolor=#e0def4ff -Ecolor=#e0def4ff -T png"
alias plant="java -jar ~/.local/share/plantuml.jar"

alias idot="\\dot -Gmargin=0.2 -Gbgcolor=#00000000 -Gcolor=#e0def4ff -Gfontcolor=#e0def4ff -Ncolor=#e0def4ff -Nfontcolor=#e0def4ff -Ecolor=#e0def4ff -T png | wezterm imgcat"
alias iplant="java -jar ~/.local/share/plantuml.jar -p | wezterm imgcat"

alias icat="wezterm imgcat"

WORDCHARS=''

autoload -Uz compinit && compinit
zinit cdreplay -q

eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"

eval "$(starship init zsh)"

fastfetch
